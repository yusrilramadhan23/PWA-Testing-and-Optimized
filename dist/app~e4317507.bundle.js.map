{"version":3,"file":"app~e4317507.bundle.js","mappings":";gKAYA,QAPe,CACb,IAAKA,EAAAA,EACL,QAASA,EAAAA,EACT,cAAeC,EAAAA,EACf,YAAaC,EAAAA,mCCqBf,QA5BkB,CAChBC,2BAA0B,WACxB,IAAMC,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cACpCC,EAAaC,KAAKC,aAAaR,GACrC,OAAOO,KAAKE,aAAaH,EAC3B,EAEAI,8BAA6B,WAC3B,IAAMV,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cAC1C,OAAOE,KAAKC,aAAaR,EAC3B,EAEAQ,aAAY,SAACR,GACX,IAAMW,EAAaX,EAAIY,MAAM,KAC7B,MAAO,CACLC,SAAUF,EAAW,IAAM,KAC3BG,GAAIH,EAAW,IAAM,KACrBI,KAAMJ,EAAW,IAAM,KAE3B,EAEAF,aAAY,SAACH,GACX,OAAQA,EAAWO,SAAW,IAAH,OAAOP,EAAWO,UAAa,MACvDP,EAAWQ,GAAK,OAAS,KACzBR,EAAWS,KAAO,IAAH,OAAOT,EAAWS,MAAS,GAC/C,4SC1BF,smNAmDA,QA5C4B,CACpBC,KAAI,YAAsC,oHAEhB,OAFnBC,EAAmB,EAAnBA,oBAAqBC,EAAU,EAAVA,WAChC,EAAKC,qBAAuBF,EAC5B,EAAKG,YAAcF,EAAW,SAExB,EAAKG,gBAAe,0CAJoB,EAKhD,EAEMA,cAAa,WAAG,kHACV,OAAFP,EAAO,EAAKM,YAAZN,GAAE,SAEA,EAAKQ,mBAAmBR,GAAG,kCACnC,EAAKS,eAAe,sBAEpB,EAAKC,cAAc,0CAND,EAQtB,EAEMF,mBAAkB,SAACR,GAAI,uHACFW,EAAAA,EAAAA,kBAAgCX,GAAG,OAA5C,OAAVI,EAAa,EAAH,yBACPA,GAAU,0CAFQ,EAG7B,EAEAM,YAAW,WAAG,WACZjB,KAAKY,qBAAqBO,WAAYC,EAAAA,EAAAA,MAEnBC,SAASC,cAAc,eAC/BC,iBAAiB,QAAO,YAAE,8FAC7BL,EAAAA,EAAAA,cAA4B,EAAKL,aAAY,OACnD,EAAKC,gBAAgB,2CAEzB,EAEAE,aAAY,WAAG,WACbhB,KAAKY,qBAAqBO,WAAYK,EAAAA,EAAAA,MAEnBH,SAASC,cAAc,eAC/BC,iBAAiB,QAAO,YAAE,8FAC7BL,EAAAA,EAAAA,cAA4B,EAAKL,YAAYN,IAAG,OACtD,EAAKO,gBAAgB,2CAEzB,mSChDF,m6MAmBA,QAhBgB,eAHhB,EAGgB,GAHhB,EAGgB,UAAG,uFACX,kBAAmBW,UAAS,gBAC2B,OAA3DC,QAAQC,IAAI,+CAA+C,0BAIP,OAAhDC,EAAK,IAAIC,EAAAA,GAAsB,kBAAiB,kBAG9CD,EAAGE,WAAU,OACnBJ,QAAQC,IAAI,6BAA6B,kDAEzCD,QAAQC,IAAI,oCAAqC,EAAF,IAAS,yDAf5D,+KAiBC,kBAde","sources":["webpack://restaurant-apps/./src/scripts/routes/routes.js","webpack://restaurant-apps/./src/scripts/routes/url-parser.js","webpack://restaurant-apps/./src/scripts/utils/like-button-initiator.js","webpack://restaurant-apps/./src/scripts/utils/sw-register.js"],"sourcesContent":["/* eslint-disable linebreak-style */\r\nimport DetailRestaurant from '../views/pages/detail';\r\nimport FavoriteRestaurant from '../views/pages/favorite';\r\nimport ListRestaurant from '../views/pages/list';\r\n\r\nconst routes = {\r\n  '/': ListRestaurant,\r\n  '/list': ListRestaurant,\r\n  '/detail/:id': DetailRestaurant,\r\n  '/favorite': FavoriteRestaurant,\r\n};\r\n\r\nexport default routes;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-underscore-dangle */\r\nconst UrlParser = {\r\n  parseActiveUrlWithCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    const splitedUrl = this._urlSplitter(url);\r\n    return this._urlCombiner(splitedUrl);\r\n  },\r\n\r\n  parseActiveUrlWithoutCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    return this._urlSplitter(url);\r\n  },\r\n\r\n  _urlSplitter(url) {\r\n    const urlsSplits = url.split('/');\r\n    return {\r\n      resource: urlsSplits[1] || null,\r\n      id: urlsSplits[2] || null,\r\n      verb: urlsSplits[3] || null,\r\n    };\r\n  },\r\n\r\n  _urlCombiner(splitedUrl) {\r\n    return (splitedUrl.resource ? `/${splitedUrl.resource}` : '/')\r\n    + (splitedUrl.id ? '/:id' : '')\r\n    + (splitedUrl.verb ? `/${splitedUrl.verb}` : '');\r\n  },\r\n};\r\n\r\nexport default UrlParser;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-underscore-dangle */\r\nimport RestaurantIdb from '../data/restaurant-idb';\r\nimport {\r\n  createLikeButtonTemplate,\r\n  createLikedButtonTemplate,\r\n} from '../views/templates/template-creator';\r\n\r\nconst LikeButtonInitiator = {\r\n  async init({ likeButtonContainer, restaurant }) {\r\n    this._likeButtonContainer = likeButtonContainer;\r\n    this._restaurant = restaurant;\r\n\r\n    await this._renderButton();\r\n  },\r\n\r\n  async _renderButton() {\r\n    const { id } = this._restaurant;\r\n\r\n    if (await this._isRestaurantExist(id)) {\r\n      this._renderLiked();\r\n    } else {\r\n      this._renderLike();\r\n    }\r\n  },\r\n\r\n  async _isRestaurantExist(id) {\r\n    const restaurant = await RestaurantIdb.getRestaurantData(id);\r\n    return !!restaurant;\r\n  },\r\n\r\n  _renderLike() {\r\n    this._likeButtonContainer.innerHTML = createLikeButtonTemplate();\r\n\r\n    const likeButton = document.querySelector('#likeButton');\r\n    likeButton.addEventListener('click', async () => {\r\n      await RestaurantIdb.putRestaurant(this._restaurant);\r\n      this._renderButton();\r\n    });\r\n  },\r\n\r\n  _renderLiked() {\r\n    this._likeButtonContainer.innerHTML = createLikedButtonTemplate();\r\n\r\n    const likeButton = document.querySelector('#likeButton');\r\n    likeButton.addEventListener('click', async () => {\r\n      await RestaurantIdb.delRestaurant(this._restaurant.id);\r\n      this._renderButton();\r\n    });\r\n  },\r\n};\r\n\r\nexport default LikeButtonInitiator;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-console */\r\nimport * as WorkboxWindow from 'workbox-window';\r\n\r\nconst swRegister = async () => {\r\n  if (!('serviceWorker' in navigator)) {\r\n    console.log('Service Worker not supported in the browser');\r\n    return;\r\n  }\r\n\r\n  const wb = new WorkboxWindow.Workbox('./sw.bundle.js');\r\n\r\n  try {\r\n    await wb.register();\r\n    console.log('Service worker registered');\r\n  } catch (error) {\r\n    console.log('Failed to register service worker', error);\r\n  }\r\n};\r\n\r\nexport default swRegister;\r\n"],"names":["ListRestaurant","DetailRestaurant","FavoriteRestaurant","parseActiveUrlWithCombiner","url","window","location","hash","slice","toLowerCase","splitedUrl","this","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","id","verb","init","likeButtonContainer","restaurant","_likeButtonContainer","_restaurant","_renderButton","_isRestaurantExist","_renderLiked","_renderLike","RestaurantIdb","innerHTML","createLikeButtonTemplate","document","querySelector","addEventListener","createLikedButtonTemplate","navigator","console","log","wb","WorkboxWindow","register"],"sourceRoot":""}